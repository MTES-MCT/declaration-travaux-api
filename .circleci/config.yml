version: 2.1
executors:
  jdk8:
    docker:
      - image: circleci/openjdk:8u212-jdk-stretch
    working_directory: '~/rieau-api'
  jdk8integration:
    docker:
      - image: circleci/openjdk:8u212-jdk-stretch
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_PASS: postgres
          POSTGRES_DB: postgres
    working_directory: '~/rieau-api'

jobs:
  install-dependencies:
    executor: jdk8
    steps:
      - checkout
      - run: cp src/main/resources/application.properties.sample src/main/resources/application.properties
      - run: cp src/test/resources/application-staging.properties.sample src/test/resources/application-staging.properties
      - restore_cache:
          key: rieau-api-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - '~/.m2'
          key: rieau-api-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          paths: 
            - '~/.m2'
            - '~/rieau-api'
  check-dependencies:
    executor: jdk8
    steps:
      - attach_workspace:
          at: '~/'
      - run: mvn verify
      - store_test_results:
          path: target/site
  unit-tests:
    executor: jdk8
    steps:
      - attach_workspace:
          at: '~/'
      - run:
          command: |
            mvn test
      - store_test_results:
          path: target/surefire-reports
  integration-tests:
    executor: jdk8integration
    steps:
      - attach_workspace:
          at: '~/'
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Install PgSQL CLI; Init database
          environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
          command: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client-10
            psql -h localhost -p 5432 -u $POSTGRES_USER -d $POSTGRES_DB -c "CREATE USER rieau;"
            psql -h localhost -p 5432 -u $POSTGRES_USER -d $POSTGRES_DB -c "CREATE DATABASE rieau;"
            psql -h localhost -p 5432 -u $POSTGRES_USER -d $POSTGRES_DB -c "GRANT ALL PRIVILEGES ON DATABASE rieau TO rieau;"
      - run:
          command: |
            mvn test -Dspring.profiles.active=staging
      - store_test_results:
          path: target/surefire-reports
      
  build:
    executor: jdk8
    steps:
      - attach_workspace:
          at: '~/'
      - run:
          command: |
            mvn package      
      - store_artifacts:
          path: target/rieau-api-$CIRCLE_BUILD_NUM.jar
      - persist_to_workspace:
          paths:
            - '~/rieau-api/target'

  build-docker:
    executor: jdk8    
    steps:
      - attach_workspace:
          at: '~/'
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Decrypt Secrets
          command: openssl enc -d -aes-256-ecb -md md5 -in src/main/resources/application-prod.properties.secrets -out src/main/resources/application-prod.properties -k $SECRETS_KEY
      - run: mvn clean compile jib:build -Dimage=tristanrobert/rieau-api:$CIRCLE_BUILD_NUM
      - store_artifacts:
          path: target/classes
          destination: rieau-api

workflows:
  version: 2
  build-deploy:
    jobs:
      - install-dependencies:
          requires: []

      - check-dependencies:
          requires:
            - install-dependencies
      - unit-tests:
          requires:
            - install-dependencies
      - integration-tests:
          requires:
            - install-dependencies

      - build:
          requires:
            - check-dependencies
            - unit-tests
            - integration-tests

      - build-docker:
          requires:
            - build
